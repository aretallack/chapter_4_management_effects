---
title: "contextual maps"
format: html
editor_options: 
  chunk_output_type: console
---
```{r}
pacman::p_load(tidyverse, plyr, tidyterra, sf, terra, mblm, ggpubr)

study_area <- read_sf("./outputs/vector/bonbon_buffer.gpkg") %>% 
  st_geometry()

surrounding_area <- st_bbox(st_buffer(study_area, 500)) %>% 
  st_as_sfc() %>% 
  st_difference(., study_area[1]) %>% 
  st_difference()

# chirps_rain <- rast("./outputs/raster/chirps_precipitation/CHIRPS2.0_global_monthly_EW_data_20000101_20230301.nc")
# 
# mean_rain <- chirps_rain %>% 
#   mean(na.rm = F) %>% 
#   mask(vect(st_buffer(study_area, 5000))) %>% 
#   crop(vect(st_buffer(study_area, 5000))) %>% 
#   project(crs(raster))
# 
# tmax <- rast("E:/data/climate_data/temperature/agcd/agcd_v1-0-1_tmax_mean_r005_monthly_1910_2022.nc") %>%
#   .[[time(.) >= ymd("2000-01-01")]] %>% 
#   crop(vect(st_buffer(st_transform(study_area, crs(.)), 5000))) %>% 
#   mean(na.rm = F) %>%
#   mask(vect(st_buffer(st_transform(study_area, crs(.)), 5000)))
# 
# tmin <- rast("E:/data/climate_data/temperature/agcd/agcd_v1-0-1_tmin_mean_r005_monthly_1910_2022.nc") %>%
#   .[[time(.) >= ymd("2000-01-01")]] %>% 
#   crop(vect(st_buffer(st_transform(study_area, crs(.)), 5000))) %>% 
#   mean(na.rm = F) %>%
#   mask(vect(st_buffer(st_transform(study_area, crs(.)), 5000)))
# tmean <- mean(tmax, tmin) %>% 
#   project(crs(raster))

elevation <- rast("E:/data/Basedata/elevation/3secSRTM_DEM/3secSRTM_DEM/DEM_ESRI_GRID_16bit_Integer/dem3s_int.tif") %>% 
  crop(vect(st_transform(study_area, crs(.)))) %>% 
  project("epsg:28353") %>% 
  mask(vect(st_transform(study_area, crs = crs(.))))

blankRast <- elevation
blankRast[!is.na(blankRast)] <- NA

ibra_sr <- read_sf("./data/vector/ibra_subregions.gpkg") %>% 
  st_intersection(st_geometry(study_area)[1]) %>%
  st_crop(ext(elevation)) %>% 
  select(SUB_NAME_7) %>% 
  filter(SUB_NAME_7 != "Gawler Lakes") %>% 
  rasterize(blankRast, field = "SUB_NAME_7")

levels(ibra_sr) <- levels(ibra_sr)[[1]][c(1,3,2),] 

nvis <- rast("E:/data/Basedata/Environmental/NVIS/FGDB_NVIS6_0_AUST_EXT_MVG/NVIS6_0_AUST_EXT_MVG_ALB.tif") %>% 
  crop(st_transform(study_area, crs(.))) %>%
  project(blankRast) %>% 
  mask(vect(st_transform(study_area, crs(.))))

nvis <- droplevels(nvis)
nvis[nvis %in% c(6, 13, 16)] <- 13
nvis[!nvis %in% c(22, 13)] <-  NA
nvis <- droplevels(nvis)

level_names <- levels(nvis)[[1]]
level_names[,2] <- c("Chenopod Shrublands", "Acacia Open Woodlands")
levels(nvis) <- level_names[c(2,1), ]

```


# Plot

```{r}
plot_rasters <- function(raster, title) {
  ggplot() +
    geom_spatraster(data = raster, na.rm = T) +
    geom_sf(data = surrounding_area, fill = "white", colour = "transparent") +
    geom_sf(data = st_buffer(study_area[1], 200), fill = "transparent", linewidth = 1) +
    geom_sf(data = study_area, fill = "transparent", linewidth = c(0.8, 0.5), colour = c(alpha("#FFFF73", 1), "#73B2FF"), linetype = c("solid", "solid")) +
    
    labs(title = title,
         fill = title) +
    theme_classic() +
    theme(legend.position = "bottom",
          legend.box.margin = margin(0.3,0,0,0, "cm"),
          # legend.margin = margin(-2, 0, 0, 0, "cm"),
          legend.background = element_rect(fill = "transparent"),
          legend.key = element_rect(colour = "black"),
          legend.text = element_text(size = unit(8, "cm")),
          legend.title = element_text(size = unit(6, "cm"), face = "bold", hjust = 0.5, vjust = -0.5),
          legend.spacing.y = unit(0.3, "cm"),
          axis.text = element_blank(),
          axis.line = element_blank(),
          axis.ticks = element_blank(),
          plot.title = element_text(size = unit(10, "cm"),
                                    face = "bold",
                                    hjust = 0.5,
                                    vjust = -2),
          # plot.margin = margin(-0.6,-0.8,0.8,-0.8, "cm")
          plot.margin = unit(c(0, 0, 0.5, 0), "cm")
    )
  }

# rain_plot <- plot_rasters(mean_rain, "Mean Monthly\nRainfall") +
#   theme(legend.spacing.y = unit(0.15, "cm")
#         ) +
#   labs(fill = "Rainfall (mm)") +
#   scale_fill_viridis_c(
#     option = "viridis",
#     direction = -1,
#     na.value = NA,
#     limits = c(round_any(minmax(mean_rain)[1], 1),
#                  round_any(minmax(mean_rain)[2], 1) + 0.1),
#     breaks = c(round_any(minmax(mean_rain)[1], 1),
#                round_any(minmax(mean_rain)[2], 1)),
#     guide = guide_colorbar(barwidth = unit(2, "cm"),
#                            barheight = unit(0.5, "cm"),
#                            frame.colour = "black",
#                            ticks.colour = "black",
#                            title.position = "top")
#     )
# 
# tmean_plot <- plot_rasters(tmean, "Mean\nTemperature") +
#   labs(fill = "Temperature (Â°C)") +
#   theme(legend.spacing.y = unit(0.15, "cm")
#         ) +
#   scale_fill_viridis_c(
#     option = "plasma",
#     direction = 1,
#     na.value = NA,
#     limits = c(plyr::round_any(minmax(tmean)[1], 0.1, floor),
#                  plyr::round_any(minmax(tmean)[2], 0.1, ceiling)),
#     breaks = c(plyr::round_any(minmax(tmean)[1], 0.1, floor),
#                  plyr::round_any(minmax(tmean)[2], 0.1, ceiling)) ,
#     guide = guide_colorbar(barwidth = unit(2, "cm"),
#                            barheight = unit(0.5, "cm"),
#                            frame.colour = "black",
#                            ticks.colour = "black",
#                            title.position = "top")
#     )

elevation_plot <- plot_rasters(elevation, "Elevation (m)") +
  labs(fill = "Elevation (m)") +
  theme(legend.spacing.y = unit(0.2, "cm"),
        legend.box.margin = margin(-0.8, 0,-1,0, "cm"),
        plot.margin = margin(0.35, 0, 0.15, 0, "cm")
        ) +
  scale_fill_viridis_c(
    option = "plasma",
    direction = 1,
    na.value = NA,
    limits = c(plyr::round_any(minmax(elevation)[1], 1, floor),
               plyr::round_any(minmax(elevation)[2], 1, ceiling)),
    breaks = c(plyr::round_any(minmax(elevation)[1], 1, floor),
               plyr::round_any(minmax(elevation)[2], 1, ceiling)),
    guide = guide_colorbar(barwidth = unit(2, "cm"),
                           barheight = unit(0.5, "cm"),
                           frame.colour = "black",
                           ticks.colour = "black",
                           title.position = "top")
    )

ibra_plot <- plot_rasters(ibra_sr, "IBRA\nSubregions") +
  geom_sf(data = read_sf("./data/vector/ibra_subregions.gpkg") %>%
            st_cast("MULTILINESTRING") %>%
            st_crop(st_buffer(study_area, -1800)) %>%
            st_intersection(st_geometry(study_area)[1]), colour = "grey30", fill = "transparent") +
  theme(legend.direction = "vertical",
        legend.position = c(0.5, 0),
        legend.box.margin = margin(0.4,0,0,0, "cm"),
        legend.title = element_blank(),
        legend.key = element_rect(colour = "black"),
        legend.key.height = unit(0.3, "cm")) +
  scale_fill_manual(values = RColorBrewer::brewer.pal(8, "Set2")[1:3],
                    na.translate = FALSE)

nvis_plot <- plot_rasters(nvis, "Vegetation Groups\n(NVIS)") +
  theme(legend.direction = "vertical",
        legend.position = c(0.5, 0),
        legend.title = element_blank(),
        legend.key = element_rect(colour = "black"),
        legend.key.height = unit(0.3, "cm")) +
  scale_fill_manual(values = c("steelblue", "pink"),
                    labels = c("Chenopod Shrubland", "Acacia Open Woodland"),
                    na.translate = FALSE)

ggpubr::ggarrange(elevation_plot,
                  ibra_plot,
                  nvis_plot,
                  ncol = 3) +
  theme(plot.margin = margin(0,0,0.7,0, "cm"))

ggsave("./figures/figure_4_contextual_maps.png",
       width = 16,
       height = 10,
       dpi = 600,
       units = "cm")
```


