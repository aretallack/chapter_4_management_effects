---
title: "Rainfall Plots"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
pacman::p_load(tidyverse, arrow, terra, sf, latticeExtra)

# BB + surrounding. Min / Max values of cover types per pixel per year.
dat <- read_parquet("./outputs/tables/bonbon_minmax.parquet") %>% 
  mutate(cyear = year - 2008, .after = 2)
dat_2 <- read_parquet("./outputs/tables/bonbon.parquet")

study_area <- read_sf("./outputs/vector/bonbon_buffer.gpkg") %>% 
  st_transform("EPSG:28353")

rain <- rast("./outputs/raster/agcd_precipitation/agcd_v2_preicp_monthly_20010101_20221201.nc") %>% 
  # .[[which(time(.) >= as_date("2001-01-01"))]] %>% 
  # .[[which(time(.) < as_date("2023-01-01"))]] %>% 
  mask(study_area) %>% 
  crop(study_area)
```

# Bon Bon vs Surrounding rainfall

```{r}
###################################
# Bon Bon vs surrounding rainfall #
###################################

in_out_rain <- rasterize(study_area, rain, "zone") %>% 
  zonal(rain, ., "mean") %>% 
  as_tibble()

names(in_out_rain)[2:length(names(in_out_rain))] <- as.character(time(rain))

in_out_rain <- in_out_rain %>% 
  pivot_longer(-1)

in_out_rain <- in_out_rain %>% 
  rename(date = "name")
in_out_rain$date <- as_date(in_out_rain$date)
in_out_rain$zone <- as.factor(in_out_rain$zone)
############################################################


# Plot

in_out_rain %>% 
  ggplot(aes(x = date, y = value, colour = zone, linewidth = zone)) +
  geom_line(linewidth = 0.5) +
  annotate("rect", xmin = as_date("2008-10-01"), xmax = as_date("2009-02-01"), ymin = -5, ymax = Inf,
           alpha = .1, fill = "black") +
  annotate("text", x = as_date("2008-08-01"), y = 80, label = 'bold("Bon Bon Destocked")', 
           hjust = 1, color = "grey30", size = 8/.pt, parse = T) +
  labs(x = "Year",
       y = "Monthly Rainfall (mm)",
       linewidth = "zone",
       colour = "zone"
       ) +
  theme_classic() +
  theme(
    legend.title = element_blank(),
    legend.text = element_text(size = 7),
    legend.direction = "horizontal",
    legend.position = c(0.19, 0.03),
    legend.background = element_rect(fill = "transparent"),
    axis.title = element_text(size = 10, face = "bold"),
    axis.title.x = element_text(vjust = unit(-0.1, "cm")),
    axis.title.y = element_text(margin = unit(c(0, 0.2, 0, 0), "cm")),
    axis.text = element_text(size = 10)
  ) +
  scale_colour_manual(labels = c("Bon Bon", "Surrounding Area"), 
                      values = c("#E78AC3", "#8DA0CB")) +
  # scale_linewidth_manual(labels = c("Bon Bon", "Surrounding Area"), 
                        # values = c(0.8, 3)) +
  # scale_discrete_manual("linewidth", breaks = c(1, 2), values = c(0.1, 3)) +
  scale_x_date(breaks = "2 year", date_labels = "%Y")

ggsave("./Figures/BonBon_Surrounding_Rainfall.png",
       width = 16,
       height = 10,
       units = "cm")
```


# Rainfall with vegetation fractional cover

```{r}
##########################################################
# 
# annual_rain <- tapp(rain, rep(1:22, each = 12), sum) %>%
#   lapply(\(x) {
#     out <- x %>%
#       as.vector() %>%
#       mean(na.rm = T)
#     return(out)
#     }) %>%
#   unlist() %>% 
#   tibble(date = lubridate::ymd(seq(2001, 2022, 1), truncated = 2),
#          rainfall = .)
# 
# 
# monthly_rain_roll <- roll(rain, 3, "mean", type = "from") %>% 
#   lapply(\(x) as.vector(x) %>% 
#                          mean(na.rm = T)) %>% 
#   unlist() %>% 
#   tibble(date = time(rain),
#          rainfall = .) %>% 
#   as.data.frame()

##########################################################
##########################################################

monthly_rain <- lapply(rain, \(x) as.vector(x) %>% 
                         mean(na.rm = T)) %>% 
  unlist() %>% 
  tibble(date = time(rain),
         rainfall = .,
         rain = as.factor(1)) %>% 
  as.data.frame()

##########################################################
##########################################################

monthly_fc <- dat_2 %>% 
  mutate(bonbon = as.factor(ifelse(station == "Bon Bon", 1, 0)),
         tvc = pv + npv) %>%
  group_by(date, bonbon) %>% 
  summarise(pv_mean = mean(pv),
            npv_mean = mean(npv),
            tvc_mean = mean(tvc),
            bare_mean = mean(bare)) %>% 
  pivot_longer(cols = 3:ncol(.), names_to = "cover_type", values_to = "cover") %>% 
  filter(date < as_date("2023-01-01")) %>% 
  filter(cover_type %in% c("tvc_mean", "bare_mean"))
monthly_fc$date <- as_date(monthly_fc$date)

##########################################################

#################
### All Years ###
#################

coeff <- 0.6

ggplot(monthly_rain, aes(x = date)) +
  # Use alpha aes and manually scale to 1 to get rainfall legend seperate from
  # cover type.
  geom_line(aes(y = rainfall, alpha = rain), colour = "lightblue", show.legend = F) +
  geom_line(data = monthly_fc, aes(y = cover/coeff, linetype = paste0(bonbon, cover_type), colour = paste0(bonbon, cover_type)), linewidth = 0.6) +
  annotate("rect", xmin = as_date("2008-10-01"), xmax = as_date("2009-02-01"), ymin = -6, ymax = Inf,
           alpha = .1, fill = "black") +
  annotate("text", x = as_date("2008-08-01"), y = 120, 
           label = "bold('Bon Bon Destocked')", 
           hjust = 1, color = "grey30", parse = T,
           size = 8 / .pt) +
  scale_y_continuous(
    name = "Monthly Rainfall (mm)",
    sec.axis = sec_axis(~.*coeff, name = "Fractional Cover (%)")
  ) + 
  scale_x_date(breaks = "2 year", date_labels = "%Y") +
  scale_colour_manual(breaks = c("0bare_mean", "1bare_mean", "0tvc_mean", "1tvc_mean"),
                      labels = c("Bare (Surrounding)", "Bare (Bon Bon)", "TVC (Surrounding)", "TVC (Bon Bon)"),
                      values = c("#FC8D62", "#FC8D62", "#66C2A5", "#66C2A5")) +
  scale_linetype_manual(breaks = c("0bare_mean", "1bare_mean", "0tvc_mean", "1tvc_mean"),
                        labels = c("Bare (Surrounding)", "Bare (Bon Bon)", "TVC (Surrounding)", "TVC (Bon Bon)"),
                        values = c("dashed", "solid", "dashed", "solid")) +
  scale_alpha_manual(labels = "",
                     values = 1) +
  labs(colour = "Vegetation Cover",
       linetype = "Vegetation Cover",
       alpha = "Rainfall",
       x = "Year") +
  theme_classic() +
  theme(
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 10, face = "bold"),
    axis.title.x = element_text(vjust = unit(-0.1, "cm")),
    axis.title.y.right = element_text(vjust = unit(0.2, "cm")),
    axis.title.y.left = element_text(margin = unit(c(0, 0.2, 0, 0), "cm")),
    legend.spacing.y = unit(-0.1, "cm"),
    legend.spacing.x = unit(0.15, "cm"),
    legend.key.width = unit(0.5, "cm"),
    legend.box = "horizontal",
    legend.background = element_rect(fill = "transparent"),
    legend.position = c(0.5, 0.03),
    legend.title = element_text(hjust = 0.5, size = 7, face = "bold"),
    legend.text = element_text(size = 7)
  ) +
  guides(linetype = guide_legend(ncol = 4, order = 1),
         colour = guide_legend(ncol = 4, order = 1),
         alpha = guide_legend(order = 2))

ggsave("./figures/rainfall_FC.png",
       width = 16,
       height = 10,
       units = "cm")
```


```{r}
##################
### After 2008 ###
##################

# ggplot(monthly_rain, aes(x = date)) +
#   # Use alpha aes and manually scale to 1 to get rainfall legend seperate from
#   # cover type.
#   geom_line(aes(y = rainfall, alpha = rain), colour = "lightblue") +
#   geom_line(data = monthly_fc, aes(y = cover, linetype = bonbon, colour = cover_type), linewidth = 0.6) +
#   scale_y_continuous(
#     name = "Monthly Rainfall (mm)",
#     sec.axis = sec_axis(~.*coeff, name = "Fractional Cover (%)")
#   ) + 
#   scale_x_date(breaks = "2 year", date_labels = "%Y") +
#   scale_colour_manual(labels = c("Bare Cover", "Total Vegetation Cover"),
#                       values = c("#FC8D62", "#66C2A5")) +
#   scale_linetype_manual(breaks = c(1, 0),
#                         labels = c("Bon Bon", "Surrounding Area"),
#                         values = c("dashed", "solid")) +
#   scale_alpha_manual(labels = "",
#                      values = 1) +
#   labs(colour = "Cover Type",
#        linetype = "Region",
#        alpha = "Rainfall",
#        x = "Year") +
#   theme_classic() +
#   coord_cartesian(xlim = c(as_date("2009-01-01"), as_date("2023-01-01")),
#                   ylim = c(-5, 70)) +
#   theme(
#     axis.text = element_text(size = 10),
#     axis.title = element_text(size = 10, face = "bold"),
#     axis.title.x = element_text(vjust = unit(-0.1, "cm")),
#     axis.title.y.right = element_text(vjust = unit(0.2, "cm")),
#     axis.title.y.left = element_text(margin = unit(c(0, 0.2, 0, 0), "cm")),
#     legend.spacing.y = unit(0.01, "cm"),
#     legend.spacing.x = unit(0.15, "cm"),
#     legend.key.width = unit(0.5, "cm"),
#     legend.box = "horizontal",
#     legend.background = element_rect(fill = "transparent"),
#     legend.position = c(0.5, 0.08),
#     legend.title = element_text(hjust = 0, size = 8, face = "bold")
#   ) +
#   guides(linetype = guide_legend(ncol = 2, order = 2),
#          colour = guide_legend(ncol = 2, override.aes = list(linewidth = 2), order = 1),
#          alpha = guide_legend(override.aes = list(linewidth = 2), label.position = "left")
#          )
# 
# ggsave("./figures/rainfall_FC_2009.png",
#        width = 16,
#        height = 10,
#        units = "cm")

```