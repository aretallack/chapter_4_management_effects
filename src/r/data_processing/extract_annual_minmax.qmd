---
title: "Extract annual minimum and maximum values"
format: html
---

For each pixel, extract the minimum of each of the cover values within a 
calendar year. Analysis can then be made on just the min or max, and the 
preciding 3 or 12 months of precipitation from this time.


```{r}
#| label: setup
pacman::p_load(arrow, tidyverse, data.table, dtplyr)
d1 <- arrow::read_parquet("./outputs/tables/bonbon.parquet")
```

# select min and max cover rows

For each cell and year, get the minimum, maximum, 5th and 95th percentile of each cover type

```{r}
# Use dtplyr to work out the tricky data.table query
# library(dtplyr)
# d1 %>%
#   lazy_dt() %>%
#   group_by(cell, year) %>%
#   summarise(pv_05 = quantile(pv, c(0.05)),
#             station = as.factor(unique(station)),
#             ibra_sr = as.factor(unique(ibra_subregion))) %>%
#   show_query()

d2 <- Reduce(merge, list(d1[is.na(pv) == F][, .(station = as.factor(unique(station)),
                                                ibra_sr = as.factor(unique(ibra_subregion)),
                                                pv_05 = quantile(pv, c(0.05))), 
                                            keyby = .(cell, year)],
                         d1[is.na(pv) == F][, .(pv_min = min(pv)), 
                                            keyby = .(cell, year)],
                         d1[is.na(pv) == F][, .(pv_95 = quantile(pv, c(0.95))), 
                                            keyby = .(cell, year)],
                         d1[is.na(pv) == F][, .(pv_max = max(pv)), 
                                            keyby = .(cell, year)],
                         
                         d1[is.na(npv) == F][, .(npv_05 = quantile(npv, c(0.05))), 
                                             keyby = .(cell, year)],
                         d1[is.na(npv) == F][, .(npv_min = min(npv)), 
                                             keyby = .(cell, year)],
                         d1[is.na(npv) == F][, .(npv_95 = quantile(npv, c(0.95))), 
                                             keyby = .(cell, year)],
                         d1[is.na(npv) == F][, .(npv_max = max(npv)), 
                                             keyby = .(cell, year)],
                         
                         d1[is.na(bare) == F][, .(bare_05 = quantile(bare, c(0.05))), 
                                              keyby = .(cell, year)],
                         d1[is.na(bare) == F][, .(bare_min = min(bare)), 
                                              keyby = .(cell, year)],
                         d1[is.na(bare) == F][, .(bare_95 = quantile(bare, c(0.95))), 
                                              keyby = .(cell, year)],
                         d1[is.na(bare) == F][, .(bare_max = max(bare)), 
                                              keyby = .(cell, year)]
                         ))
```

```{r}
write_parquet(d2, "./outputs/tables/bonbon_minmax.parquet")
```


```{r}
# visual checks 
d2[,.(val_min = mean(pv_min,na.rm=T), 
      val_max = mean(pv_max,na.rm=T)), by=year] %>% 
  pivot_longer(-year) %>% 
  ggplot(aes(year,value,color=name))+
  geom_line()

d2[,.(val_min = mean(npv_min,na.rm=T), 
      val_max = mean(npv_max,na.rm=T)), by=year] %>% 
  pivot_longer(-year) %>% 
  ggplot(aes(year,value,color=name))+
  geom_line()

## THERE IS SOMETHING WEIRD GOING ON IN 2023
## because 2023 only has one month of data? unclear
d2[,.(val_min = mean(bare_min,na.rm=T), 
      val_max = mean(bare_max,na.rm=T)), by=year] %>% 
  pivot_longer(-year) %>% 
  ggplot(aes(year,value,color=name))+
  geom_line() +geom_point()

d2[year==2023]$bare_min %>% summary()
d2[year==2023]$bare_max %>% summary()

min(d1[year==2023][is.na(bare)==F]$bare,na.rm=T)
max(d1[year==2023][is.na(bare)==F]$bare,na.rm=T)
min(d1[year==2023]$bare,na.rm=T)
max(d1[year==2023]$bare,na.rm=T)
d1[year==2023]$bare %>% summary
d2[year==2023]$bare_min %>% summary()
d2[year==2023]$bare_max %>% summary()

```

