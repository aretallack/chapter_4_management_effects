---
title: "Rainfall Plots"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
pacman::p_load(tidyverse, arrow, terra, sf, data.table, latticeExtra)

# BB + surrounding. Min / Max values of cover types per pixel per year.
dat <- read_parquet("./outputs/tables/bonbon_minmax.parquet") %>% 
  mutate(cyear = year - 2008, .after = 2)
dat_2 <- read_parquet("./outputs/tables/bonbon.parquet")

study_area <- read_sf("./outputs/vector/bonbon_buffer.gpkg") %>% 
  st_transform("EPSG:28353")

rain <- rast("./outputs/raster/agcd_precipitation/agcd_v2-0-1_precip_total_r001_monthly_2000_2022.nc") %>% 
  # .[[which(time(.) >= as_date("2001-01-01"))]] %>% 
  # .[[which(time(.) < as_date("2023-01-01"))]] %>% 
  mask(study_area) %>% 
  crop(study_area)
```

# Rainfall with vegetation fractional cover

```{r}
monthly_rain <- roll(rain, 12, "mean", type = "to") %>%
  lapply(\(x) as.vector(x) %>%
                         mean(na.rm = T)) %>%
  unlist() %>%
  tibble(date = time(rain),
         rainfall = .,
         rain = as.factor(1)) %>%
  as.data.frame()

monthly_rain <- monthly_rain %>%
  filter(!is.na(rainfall))

monthly_fc <- dat_2 %>%
  mutate(bonbon = as.factor(ifelse(station == "Bon Bon", 1, 0)),
         tvc = pv + npv) %>%
  group_by(bonbon, cell) %>%
  arrange(date) %>%
  mutate(tvc_12mo = frollmean(tvc, 12),
         pv_12mo = frollmean(pv, 12),
         npv_12mo = frollmean(npv, 12),
         bare_12mo = frollmean(bare, 12)) %>%
  group_by(date, bonbon) %>%
  summarise(tvc_12mo = mean(tvc_12mo),
            pv_12mo = mean(pv_12mo),
            npv_12mo = mean(npv_12mo),
            bare_12mo = mean(bare_12mo)) %>%
  pivot_longer(cols = 3:ncol(.), names_to = "cover_type", values_to = "cover") %>%
  filter(date < as_date("2023-01-01"))

monthly_fc$date <- as_date(monthly_fc$date)

monthly_fc <- monthly_fc %>%
  filter(!is.na(cover))

monthly_fc <- monthly_fc %>% 
  group_by(bonbon, cover_type) %>% 
  arrange(date) %>% 
  mutate(
    min_12 = frollapply(cover, 12, \(x) quantile(x, 0.05))
         )

ribbon_data <- monthly_fc %>%
  group_by(date, cover_type) %>% 
  summarise(max = max(cover, na.rm = T),
            min = min(cover, na.rm = T),
            diff = max - min)

ribbon_data[mapply(is.infinite, ribbon_data)] <- NA

##########################################################
```

# Cover Plot

```{r}
monthly_fc <- monthly_fc %>% 
  filter(cover_type != "tvc_12mo")

ribbon_data <- ribbon_data %>% 
  filter(cover_type != "tvc_12mo")

plot_cover <- function(x, y) {
  monthly_fc <- x
  ribbon_data <- y
  
ggplot(monthly_fc, aes(x = date)) +
  # geom_line(aes(y = rainfall, alpha = rain), colour = "lightblue", show.legend = F) +
  geom_line(aes(y = cover, linetype = paste0(bonbon, cover_type), colour = paste0(bonbon, cover_type)), linewidth = 0.6) +
  geom_ribbon(data = ribbon_data, aes(ymin = min, ymax = max, fill = cover_type), alpha = 0.2, show.legend = F) +
  annotate("rect", xmin = as_date("2008-01-01"), xmax = as_date("2008-04-01"), ymin = 0, ymax = 72,
           alpha = .1, fill = "black") +
  annotate("text", x = as_date("2008-06-01"), y = 66,
           label = "bold('Bon Bon Destocked (2008)')",
           hjust = 0, color = "grey30", parse = T,
           size = 8/.pt) +
  coord_cartesian(ylim = c(min(monthly_fc$cover), (max(monthly_fc$cover) + 2)),
                  xlim = c(as_date("2002-01-01"), as_date("2023-01-01"))) +
  scale_y_continuous(breaks = seq(plyr::round_any(min(monthly_fc$cover), 10, floor), 
                                  plyr::round_any(max(monthly_fc$cover) + 5, 10, ceiling), 
                                  5)) +
  scale_x_date(limits = as_date(c(as_date("2002-01-01"), as_date("2023-01-01"))), 
               breaks = "2 year", date_labels = "%Y", 
               expand = c(0, 0)) +
  scale_colour_manual(breaks = c("1bare_12mo", "0bare_12mo", "1npv_12mo", "0npv_12mo", "1pv_12mo", "0pv_12mo"),
                      labels = c("Bon Bon", "Surrounding", "Bon Bon", "Surrounding", "Bon Bon", "Surrounding"),
                      values = c("#FC8D62", "#FC8D62", "#8DA0CB", "#8DA0CB", "#66C2A5", "#66C2A5")) +
  scale_fill_manual(breaks = c("bare_12mo", "npv_12mo", "pv_12mo"),
                      labels = c("Bare Difference", "NPV Difference", "PV Difference"),
                      values = c("#FC8D62", "#8DA0CB", "#66C2A5")) +
  scale_linetype_manual(breaks = c("1bare_12mo", "0bare_12mo", "1npv_12mo", "0npv_12mo", "1pv_12mo", "0pv_12mo"),
                        labels = c("Bon Bon", "Surrounding", "Bon Bon", "Surrounding", "Bon Bon", "Surrounding"),
                        values = c("solid", "dashed", "solid", "dashed", "solid", "dashed")) +
  labs(colour = "Vegetation Cover",
       linetype = "Vegetation Cover",
       fill = "Vegetation Cover",
       x = "Date",
       y = "Cover (%)") +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 10),
    axis.text.x = element_text(size = 8),
    axis.title = element_text(size = 10, face = "bold"),
    axis.title.x = element_text(vjust = unit(-0.1, "cm")),
    axis.title.y.right = element_text(vjust = unit(0.2, "cm")),
    axis.title.y.left = element_text(margin = unit(c(0, 0.2, 0, 0), "cm")),
    legend.spacing.x = unit(0.1, "cm"),
    legend.key.width = unit(1, "cm"),
    legend.direction = "horizontal",
    legend.background = element_rect(fill = "transparent"),
    legend.position = c(0.1, 0.87),
    legend.title = element_blank(),
    legend.text = element_text(size = 7, face = "bold"),
    strip.background = element_blank(),
    strip.text = element_blank()
  ) +
  guides(linetype = guide_legend(order = 1, override.aes = list(linewidth = 1)),
         colour = guide_legend(label.position = "right", order = 1),
         alpha = guide_legend(order = 2),
         fill = guide_legend(override.aes = list(alpha = 1)))
  }

bare_plot <- plot_cover(monthly_fc %>% 
             filter(cover_type == "bare_12mo"),
           ribbon_data %>% 
             filter(cover_type == "bare_12mo")) +
  theme(legend.position = c(0.8, 0.92)) +
  annotate("text", x = as_date("2002-06-01"), y = 65,
           label = "underline(bold('Bare'))",
           hjust = 0, color = "#FC8D62", parse = T,
           size = 12/.pt)

npv_plot <- plot_cover(monthly_fc %>% 
             filter(cover_type == "npv_12mo"),
           ribbon_data %>% 
             filter(cover_type == "npv_12mo")) +
  theme(legend.position = c(0.8, 0.9)) +
  annotate("text", x = as_date("2002-06-01"), y = 39,
           label = "underline(bold('NPV'))",
           hjust = 0, color = "#8DA0CB", parse = T,
           size = 12/.pt)

pv_plot <- plot_cover(monthly_fc %>% 
             filter(cover_type == "pv_12mo"),
           ribbon_data %>% 
             filter(cover_type == "pv_12mo")) +
  theme(legend.position = c(0.8, 0.9)) +
  annotate("text", x = as_date("2002-06-01"), y = 14.8,
           label = "underline(bold('PV'))",
           hjust = 0, color = "#66C2A5", parse = T,
           size = 12/.pt)

```

# Rainfall Plot

```{r}
p2 <- ggplot(monthly_rain, aes(x = date, y = rainfall)) +
  geom_line(colour = "steelblue") +
  scale_x_date(limits = as_date(c(as_date("2002-01-01"), as_date("2023-01-01"))), 
               breaks = "2 year", date_labels = "%Y", 
               expand = c(0, 0)) +
  labs(y = "Monthly\nRainfall (mm)",
       x = "Year") +
  theme_classic() +
  theme(
    axis.title = element_text(size = 10, face = "bold"),
    axis.text = element_text(size = 10)
  )

ggpubr::ggarrange(bare_plot +
                    ggpubr::rremove("x.title"),
                    # ggpubr::rremove("x.text"),
                  npv_plot +
                    ggpubr::rremove("x.title"),
                    # ggpubr::rremove("x.text"),
                  pv_plot +
                    ggpubr::rremove("x.title"),
                    # ggpubr::rremove("x.text")
                  p2,
                  ncol = 1,
                  nrow = 4,
                  heights = c(1, 1, 1, 1),
                  align = "v")

ggsave("./figures/rainfall_FC.png",
       width = 16,
       height = 14,
       units = "cm")

```
